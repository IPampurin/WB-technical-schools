/* ВАРИАНТ №1 - решение задачи l2.1 */

package main

import "fmt"

func main() {

	// исходный массив из пяти целочисленных элементов.
	// в Go массивы имеют фиксированный размер, поэтому кроме замены элементов
	// с массивом мало что можно сделать
	a := [5]int{76, 77, 78, 79, 80}

	// объявляем целочисленный слайс b и сразу инициализируем его значениями
	// на основе массива a, берём элементы по индексам с 1-го по 4-ый,
	// при чём индекс 1 включается в срез, а индекс 4 - нет
	var b []int = a[1:4]

	fmt.Println(b) // выводим результат: [77 78 79]

	/*
		теперь слайс b под капотом ссылается на массив a (на ту же область памяти),
		соответственно, изменения в массиве a будут влиять на содержимое слайса b.

		например:
		a[2] = 0
		fmt.Println(b) // выводим результат: [77 0 79]

		также как и изменения в слайсе b будут влиять на состояние массива a.

		например:
		b[2] = 101
		fmt.Println(b) // выводим результат: [77 78 101]
		fmt.Println(a) // выводим результат: [76, 77, 78, 101, 80]

		Слайс (срез) - это не копия данных, а "окно" в исходный массив.
	*/
}
