/* ВАРИАНТ №1 - решение задачи l2.4 */

package main

func main() {

	ch := make(chan int)

	// запускаем горутину, которая отправляет в канал числа с 0 по 9
	// так как канал не закрываем после отправки чисел, main() может
	// долго ждать поступления новых данных из канала
	go func() {
		for i := 0; i < 10; i++ {
			ch <- i
		}
		// close(ch)	// это можно добавить, чтобы решить проблему
	}()

	// слушаем канал и печатаем числа, которые по нему приходят.
	// когда числа, отправляемые горутиной выше, закончатся, наступит deadlock,
	// так как ожидание чисел в данном случае будет происходить до закрытия канала
	// (for-range по каналу продолжает работу, пока канал не будет закрыт)
	for n := range ch {
		println(n)
	}
}

// конечный вывод программы: fatal error: all goroutines are asleep - deadlock!
// горутина main заблокирована в for-range, ожидая данные из канала.
// дочерняя горутина завершилась после отправки 10 чисел.
// обе горутины не могут продолжить выполнение, поэтому deadlock.
